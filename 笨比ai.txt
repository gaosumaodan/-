#include <graphics.h>		// 引用 EasyX 图形库
#include <windows.h>
#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#include <time.h>

void drawgraph();
void setchess(int* a, int x, int y, int c[][32]);
void AiChess(int* a, int c[][32], int d[][32], int e[][32]);
void JudgeVictory(int c[][32]);

int c[32][32] = {};
int d[32][32] = {};
int e[32][32] = {};
int main()
{
	int num = 0;
	int* a = &num;
	drawgraph();
	MOUSEMSG m;
	while (1) {
		m = GetMouseMsg();
		if (m.uMsg == WM_LBUTTONDOWN) {
			AiChess(a, c, d, e);
			setchess(a, m.x, m.y, c);
			JudgeVictory(c);
		}
	}
	return 0;
}

void drawgraph() {
	initgraph(800, 800);	// 初始化1000×1000的画布
	setbkcolor(YELLOW);
	cleardevice();
	setlinestyle(PS_SOLID, 4); //设置实线
	setlinecolor(BLACK); //设置线颜色
	int i, j, k;
	line(50, 50, 50, 750);
	line(50, 50, 750, 50);
	line(50, 750, 750, 750);
	line(750, 50, 750, 750);
	setlinestyle(PS_SOLID, 2);
	for (i = 2; i <= 14; i++)
	{
		line(50 * i, 50, 50 * i, 750);
		line(50, 50 * i, 750, 50 * i);
	}
	for (k = 1; k <= 3; k++) {
		for (j = 1; j <= 3; j++) {
			setfillcolor(BLACK);
			solidcircle(200 * j, 200 * k, 5);
		}
	}
}

void AiChess(int* a, int c[][32], int d[][32], int e[][32]) {
	if (*a == 0) {
		*a = (*a + 1) % 2;
		setfillcolor(BLACK);
		srand((unsigned)time(0));
		int i, j, k, l, b, m = 0, max = 0, random[1000] = { 0 }, r = 0;
		for (i = 2; i < 34; i += 2) {
			for (j = 2; j < 34; j += 2) {
				if (d[i][j] == 0) {
					d[i][j] = c[i][j];
				}
			}
			j = 2;
		}
		for (i = 2; i < 34; i += 2) {
			for (j = 2; j < 34; j += 2) {
				if (d[i][j] != 0) {
					m = 1;
				}
			}
			j = 2;
		}
		if (m) {
			for (i = 2; i < 34; i += 2) {
				for (j = 2; j < 34; j += 2) {
					if (d[i][j] == 0) {
						for (k = i - 10, b = 0; b < 10; k = k + 2, b++) {
							if (k > 0 && k < 34) {
								e[i][j] += d[k][j];
							}
						}
						for (k = j - 10, b = 0; b < 10; k = k + 2, b++) {
							if (k > 0 && k < 34) {
								e[i][j] += d[i][k];
							}
						}
						for (k = i - 10, l = j - 10, b = 0; b < 10; k += 2, l += 2, b++) {
							if (k > 0 && k < 34 && l>0 && l < 34) {
								e[i][j] += d[k][l];
							}
						}
						for (k = i, l = j - 10, b = 0; b < 10; k += 2, l += 2, b++) {
							if (k > 0 && k < 34 && l>0 && l < 34) {
								e[i][j] += d[k][l];
							}
						}
						if (e[i][j] != 0) {
							e[i][j] += 2;
						}
					}
				}
				j = 2;
			}
			for (i = 2; i < 34; i += 2) {
				for (j = 2; j < 34; j += 2) {
					if (e[i][j] > max) {
						max = e[i][j];
					}
				}
				j = 2;
			}
			for (i = 2; i < 34; i += 2) {
				for (j = 2; j < 34; j += 2) {
					if (e[i][j] == max) {
						r++;
						random[r] = i * 100 + j;
					}
				}
				j = 2;
			}
			r = random[rand() % r + 1];
			solidcircle(r / 100 * 25, r % 100 * 25, 25);
			c[r / 100][r % 100] = -1;
			e[i][j] = {};
		}
		else {
			solidcircle(400, 400, 25);
			c[16][16] = -2;
			d[16][16] = -1;
		}
	}
}

void setchess(int* a, int x, int y, int c[][32]) {
	int m;
	setfillcolor(WHITE);
	m = 2;
	if (x >= 25 && x < 775 && y >= 25 && y < 775) {
		x = x / 25;
		if (x % 2 == 1) {
			x += 1;
		}
		y = y / 25;
		if (y % 2 == 1) {
			y += 1;
		}
		if (c[x][y] == 0) {
			c[x][y] = m;
			solidcircle(x * 25, y * 25, 25);
			*a = (*a + 1) % 2;
		}
	}
}

void JudgeVictory(int c[][32]) {
	int m, n, a = 0, sum1 = 0, sum2 = 0, sum3 = 0, sum4 = 0;
	for (m = 2; m < 24; m = m + 2) {
		for (n = 2; n < 34; n = n + 2) {
			sum1 = c[m][n] + c[m + 2][n] + c[m + 4][n] + c[m + 6][n] + c[m + 8][n];
			if (fabs(sum1) > fabs(a)) {
				a = sum1;
			}
		}
		n = 2;
	}
	for (m = 2; m < 34; m = m + 2) {
		for (n = 2; n < 26; n = n + 2) {
			sum2 = c[m][n] + c[m][n + 2] + c[m][n + 4] + c[m][n + 6] + c[m][n + 8];
			if (fabs(sum2) > fabs(a)) {
				a = sum2;
			}
		}
		n = 2;
	}
	for (m = 2; m < 26; m = m + 2) {
		for (n = 2; n < 26; n = n + 2) {
			sum3 = c[m][n] + c[m + 2][n + 2] + c[m + 4][n + 4] + c[m + 6][n + 6] + c[m + 8][n + 8];
			if (fabs(sum3) > fabs(a)) {
				a = sum3;
			}
		}
		n = 2;
	}
	for (m = 10; m < 34; m = m + 2) {
		for (n = 2; n < 26; n = n + 2) {
			sum4 = c[m][n] + c[m - 2][n + 2] + c[m - 4][n + 4] + c[m - 6][n + 6] + c[m - 8][n + 8];
			if (fabs(sum4) > fabs(a)) {
				a = sum4;
			}
		}
	}
	if (a == 10) {
		MessageBox(NULL, TEXT("White win"), TEXT("游戏结束"), 0);
		closegraph();
		exit(0);
	}
	else if (a == -10) {
		MessageBox(NULL, TEXT("Black win"), TEXT("游戏结束"), 0);
		closegraph();
		exit(0);
	}
}